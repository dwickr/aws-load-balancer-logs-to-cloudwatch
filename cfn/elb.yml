AWSTemplateFormatVersion: '2010-09-09'
Description: ELB for logs testing

Parameters:
  
  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref AWS::StackName
      GroupDescription: !Ref AWS::StackName
      VpcId: !Ref VpcId

  SecurityGroupHTTPInbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 7

  LogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogsBucket
      PolicyDocument:
        Statement:
          - Sid: Allow load balancer to dump access logs
            Effect: Allow
            Action: s3:PutObject
            Principal:
              AWS: 783225319266
            Resource: !Sub arn:aws:s3:::${LogsBucket}/AWSLogs/${AWS::AccountId}/*

  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      LoadBalancerName: !Ref AWS::StackName
      Scheme: internet-facing
      AccessLoggingPolicy:
        Enabled: true
        EmitInterval: 5
        S3BucketName: !Ref LogsBucket
      Listeners:
        - InstancePort: '80'
          LoadBalancerPort: '80'
          Protocol: HTTP
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref SecurityGroup

Outputs:

  Name:
    Value: !Ref LoadBalancer

  DNSName:
    Value: !GetAtt LoadBalancer.DNSName

  LogsBucket:
    Value: !Ref LogsBucket
